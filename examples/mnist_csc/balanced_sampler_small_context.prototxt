name: "cifar10_balanced_sampler_small_context"
layer {
  name: "cifar10"
  type: "Python"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  python_param {
    module: "balanced_sampling_layer.layer" 
    layer: "BalancedSamplingLayer"
    param_str: "{\'name\': \'mnist\', \'samples_per_class\': 80, \'batch_size\': 100, \'train\': True}"
  }
}
layer {
  name: "cifar10"
  type: "Python"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  python_param {
    module: "balanced_sampling_layer.layer" 
    layer: "BalancedSamplingLayer"
    param_str: "{\'name\': \'mnist\', \'samples_per_class\': 100, \'batch_size\': 100, \'train\': False}"
  }
}
layer {
    name: "reshape"
    type: "Python"
    bottom: "data"
    top: "reshape"
    python_param {
        module: "patch_layer.layer"
        layer: "CSCPatchLayer"
        param_str: "{\'patch_size\': 7}"
    }
    propagate_down: false
}
layer {
  name: "csc"
  type: "CSC"
  bottom: "reshape"
  top: "csc"
  csc_param {
    kernel_h: 5
    kernel_w: 5
    num_output: 100
    admm_max_iter: 1000
    admm_max_rho: 1
    admm_eta: 1.1
    lambda1: 0.1
    lambda2: 1
    verbose: false
    filler {
        type: "xavier"
    }
    boundary: PAD_BOTH
  }
  param { lr_mult: 0 }
  param { lr_mult: 0 }
}
layer {
  name: "bn"
  type: "BatchNorm"
  bottom: "csc"
  top: "bn"
}
layer {
  name: "scale"
  type: "Scale"
  bottom: "bn"
  top: "bn"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu"
  type: "ReLU"
  bottom: "bn"
  top: "bn"
}
layer {
  name: "pool"
  type: "Pooling"
  bottom: "bn"
  top: "pool"
  pooling_param {
    pool: MAX
    global_pooling: true
  }
}
layer {
    name: "reshape_back"
    type: "Python"
    bottom: "pool"
    top: "reshape_back"
    python_param {
        module: "patch_layer.layer"
        layer: "CSCGatherLayer"
        param_str: "{\'num_patches_h\': 4, \'num_patches_w\': 4}"
    }
}
layer {
  name: "ip"
  type: "InnerProduct"
  bottom: "reshape_back"
  top: "ip"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip"
  bottom: "label"
  top: "accuracy"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip"
  bottom: "label"
  top: "loss"
}
